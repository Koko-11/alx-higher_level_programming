This file contain test cases for function ''matrix_divided''

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

(1) test case 1
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

(2) test case 2
>>> matrix = ["usr", [1, 2, 3]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

(3) test case 3
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, "string")
Traceback (most recent call last):
	...
TypeError: div must be a number

(4) test case 4
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

(5) test case 5
>>> matrix = [[1, 2, 3, 4], [5, 6, 7]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

(6) test case 6
>>> matrix = [[1, 2, 3], [5, 6, 7]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

(7) test case 7
>>> matrix_divided(1)
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

(8) test case 8
>>> matrix_divided()
Traceback (most recent call last):
        ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
